cmake_minimum_required(VERSION 3.30)
project(ds LANGUAGES CXX)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

file(GLOB_RECURSE SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc")
add_library(${PROJECT_NAME} STATIC ${SOURCES})
target_include_directories(${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
target_compile_features(${PROJECT_NAME} PUBLIC cxx_std_20)
set_property(TARGET ${PROJECT_NAME} PROPERTY INTERPROCEDURAL_OPTIMIZATION True)

file(GLOB EXECUTABLE_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/examples/*.cc")
foreach(EXEC_FILE ${EXECUTABLE_SOURCES})
  get_filename_component(EXEC_NAME ${EXEC_FILE} NAME_WE)
  add_executable(${EXEC_NAME} ${EXEC_FILE})
  target_link_libraries(${EXEC_NAME} PRIVATE ${PROJECT_NAME})
  set_property(TARGET ${EXEC_NAME} PROPERTY INTERPROCEDURAL_OPTIMIZATION True)
endforeach()

find_package(pybind11)
if(pybind11_FOUND)
  pybind11_add_module(pyds ${CMAKE_CURRENT_SOURCE_DIR}/pyds/ds.cc)
  target_link_libraries(pyds PRIVATE ${PROJECT_NAME})
  set_property(TARGET pyds PROPERTY INTERPROCEDURAL_OPTIMIZATION True)
  set_target_properties(pyds PROPERTIES OUTPUT_NAME ds)
  install(TARGETS pyds DESTINATION pyds)
else()
  message(STATUS "pybind11 not found, Python bindings will not be built.")
endif()

find_package(GTest)
if(GTest_FOUND)
  enable_testing()
  add_custom_target(test_executables)
  file(GLOB TEST_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/tests/*.cc")
  foreach(TEST_FILE ${TEST_SOURCES})
    get_filename_component(TEST_NAME ${TEST_FILE} NAME_WE)
    add_executable(${TEST_NAME} ${TEST_FILE})
    target_link_libraries(${TEST_NAME} PRIVATE ${PROJECT_NAME} GTest::gtest_main)
    set_property(TARGET ${TEST_NAME} PROPERTY INTERPROCEDURAL_OPTIMIZATION True)
    gtest_discover_tests(${TEST_NAME})
    add_dependencies(test_executables ${TEST_NAME})
  endforeach()
else()
  message(STATUS "GTest not found, tests will not be built.")
endif()
