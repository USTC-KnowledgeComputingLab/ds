cmake_minimum_required(VERSION 3.30)
project(cuds LANGUAGES CUDA C CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CUDA_ARCHITECTURES 80)
set(CMAKE_CUDA_SEPARABLE_COMPILATION ON)
set(CMAKE_CUDA_FLAGS_DEBUG "${CMAKE_CUDA_FLAGS_DEBUG} -G")

set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
file(GLOB_RECURSE SOURCES "${SOURCE_DIR}/*.cu" "${SOURCE_DIR}/*.c" "${SOURCE_DIR}/*.c++")
add_library(${PROJECT_NAME} STATIC ${SOURCES})
target_include_directories(${PROJECT_NAME} PUBLIC ${INCLUDE_DIR})

file(GLOB EXECUTABLE_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/*.cu" "${CMAKE_CURRENT_SOURCE_DIR}/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/*.c++")
foreach(EXEC_FILE ${EXECUTABLE_SOURCES})
  get_filename_component(EXEC_NAME ${EXEC_FILE} NAME_WE)
  add_executable(${EXEC_NAME} ${EXEC_FILE})
  target_link_libraries(${EXEC_NAME} PRIVATE ${PROJECT_NAME})
endforeach()
